name: tests

on:
  workflow_call:
    secrets:
      GITOPS_PRIVATE_SSH_KEY:
        required: false
    inputs:
      SERVICE_NAME:
        description: 'Name of the service to test'
        default: ''
        type: string
        required: true
      NEEDS_DB:
        description: 'Does the service need a database?'
        default: false
        type: boolean
        required: false

jobs:
  postman_tests:
    name: 'Postman tests'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v3

    - name: 'NodeJS setup'
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'
    
    - name: 'Install newman'
      run: |
        npm install -g newman

    - name: 'GCP Auth'
      if: ${{ inputs.NEEDS_DB }}
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: projects/781206613588/locations/global/workloadIdentityPools/my-pool/providers/my-provider
        service_account: gitops-service-account@aurora-377318.iam.gserviceaccount.com

    - name: 'Setup docker login'
      if: ${{ inputs.NEEDS_DB }}
      run: | 
        gcloud auth configure-docker northamerica-northeast1-docker.pkg.dev
    
    - name: 'Spin up postgres container'
      if: ${{ inputs.NEEDS_DB }}
      run: |
        docker run -d --rm --net host northamerica-northeast1-docker.pkg.dev/aurora-377318/main-registry/dockerized-db:604b0a440bbf5bd5390ada40ab3a9b014a72e5ff
    
    - name: 'Download tested service docker image'
      uses: actions/download-artifact@v3
      with:
        name: ${{ github.event.repository.name }}_${{ github.sha }}
        path: .
    
    - name: 'Load docker image and start it'
      run: |
        docker load -i ${{ github.event.repository.name }}_${{ github.sha }}.tar
        docker run -d --rm --net host northamerica-northeast1-docker.pkg.dev/aurora-377318/main-registry/${{ github.event.repository.name }}:${{ github.sha }}
    
    - name: 'Run Postman tests'
      run: |
        newman run "postman/collections/${{ inputs.SERVICE_NAME }} API.json" 
    
    - name: 'Stop containers'
      if: always()
      run: |
        docker stop $(docker ps -a -q)
    